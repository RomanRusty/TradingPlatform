@using TradingPlatform.ClientService.Contracts.Modals
@using TradingPlatform.ClientService.Contracts.Products
@model ProductDetailsViewModel
<div class="Container row">
	<div class="col-md-2"></div>
	<div class="col-md-8 card">
		<div class="card-body">
			@if (Model.Product.Images != null && Model.Product.Images.Count() != 0)
			{
				<div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-indicators">
						@for (var i = 0; i < Model.Product.Images.Count(); i++)
						{
							if (i == 0)
							{
								<button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="@i" class="active" aria-current="true" aria-label="Slide @i"></button>
							}
							else
							{
								<button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="@i" aria-current="true" aria-label="Slide @i"></button>
							}
						}
					</div>
					<div class="carousel-inner">
						@for (var i = 0; i < Model.Product.Images.Count(); i++)
						{
							var item = Model.Product.Images.ElementAt(i);
							if (i == 0)
							{
								<div class="carousel-item active">
									<img src="@item.GetImage()" class="d-block w-100" style="height:500px" alt="Image not loaded">
								</div>
							}
							else
							{
								<div class="carousel-item">
									<img src="@item.GetImage()" class="d-block w-100" style="height:500px" alt="Image not loaded">
								</div>
							}
						}
					</div>
					<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			}
			<h5 class="card-title">@Model.Product.Name</h5>
			<p class="card-text">@Model.Product.Description</p>
			<div class="row">
				<div class="col-md-5">
					<h5 class="card-title">@Model.Product.Price</h5>
				</div>
				<div class="col-md-2">
				</div>
				@if (User.IsInRole("Custumer"))
				{
					<div>
						<partial name="_ModalAddItemToCart" model="@new AddItemToCartViewModel(){Product=Model.Product,Orders=Model.AvailableOrdersSelectList }" />
					</div>
				}

			</div>
		</div>
	</div>
</div>